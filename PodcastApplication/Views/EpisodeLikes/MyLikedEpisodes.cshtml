@model List<Episode>

@using PodcastApplication.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject AppDbContext _db


@{
    ViewData["Title"] = "My Liked Episodes";
}

<section class="latest-podcast-section section-padding pb-0" id="section_2">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-12 col-12">
                <div class="section-title-wrap mb-5">
                    <h4 class="section-title">Liked Episodes</h4>
                </div>
            </div>
            @if(Model.Any() && Model != null)
            {
                @foreach (var episode in Model)
                {

                    var userId = _userManager.GetUserId(User);
                    var isLiked = _db.EpisodeLikes.FirstOrDefault(x => x.UserId == userId && x.EpisodeId == episode.EpisodeId);

                    <div class="col-lg-6 col-12 mb-4 mb-lg-0" id="episode-block-@episode.EpisodeId">
                        <div class="custom-block d-flex">
                            <div class="">
                                <div class="custom-block-icon-wrap">
                                    <div class="section-overlay"></div>
                                    <a class="custom-block-image-wrap">
                                        <img src="~/images/podcast/11683425_4790593.jpg" class="custom-block-image img-fluid" alt="">

                                       
                                    </a>
                                </div>

                                
                            </div>

                            <div class="custom-block-info">
                                <div class="custom-block-top d-flex mb-1">
                                    <small class="me-4">
                                        <i class="bi-clock-fill custom-icon"></i>
                                        @episode.EpisodeDuration
                                    </small>


                                </div>

                                <h5 class="mb-2">
                                    <a asp-action="EpisodeDetails" asp-controller="Episodes"
                                       asp-route-id="@episode.EpisodeId">
                                        @episode.EpisodeTitle
                                    </a>
                                </h5>

                                <div class="profile-block d-flex">
                                    <img src="~/images/profile/woman-posing-black-dress-medium-shot.jpg" class="profile-block-image img-fluid" alt="">

                                </div>

                                <p class="mb-0">@episode.EpisodeDescription</p>

                                
                            </div>

                            <div class="d-flex flex-column ms-auto">
                                <a id="likeBtn-@episode.EpisodeId" class="badge ms-auto" onclick="toggleLike('@episode.EpisodeId', false)">
                                    <i class="bi-heart-fill"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }

            }
            else
            {
                <h4>No Liked Episodes Yet</h4>
            }
            
        </div>
        <div>
            <a class="text" asp-action="AllEpisodes" asp-controller="Episodes">
                <b>Discover Episodes</b>
            </a>
        </div>
    </div>
</section>

<script>

    function toggleLike(episodeId, isLiking) {
        $.ajax({
            url: '/EpisodeLikes/ToggleLike',
            type: 'POST',
            data: {
                episodeId: episodeId,
                isLiking: isLiking
            },
            success: function (response) {
                if (response.likeCount !== undefined) {

                    if (!isLiking) {
                        if(confirm("Are you sure you want to unlike this episode?")) {
                            $(`#episode-block-${episodeId}`).remove();

                        }
                                
                    }
                }
                else {
                    alert("Error liking");
                }
            },
            error: function (xhr, status, error) {
                alert('Please login to interact.');
            }
        });
    }
   
</script>