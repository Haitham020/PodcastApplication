@model PodcastDetailViewModel
@using PodcastApplication.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager

@inject AppDbContext _db

@{
    var userId = _userManager.GetUserId(User);
    var isSubscribed = _db.Subscriptions.Any(s => s.PodcastId == Model.Podcast!.PodcastId && s.UserId == userId);

    var ratingCount = Model.Podcast!.Ratings?.Count() ?? 0;
    var averageRating = ratingCount > 0 ? Model.Podcast.Ratings!.Average(r => r.RatingValue).ToString("0.0") : "0";
}

@{
    ViewData["Title"] = "Podcast Details";
}

<style>
    .modal-backdrop {
        position: relative;
        z-index: -1
    }


    .custom-block {
        padding: 15px;
    }

    .custom-block-icon-wrap {
        position: relative;
        width: 100%;
    }

    .star {
        cursor: pointer;
        font-size: 24px;
        color: gray;
    }

        .star.selected {
            color: gold;
        }
</style>


<section class="latest-podcast-section section-padding pb-0" id="section_2">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10 col-12">
                <div class="section-title-wrap mb-5">
                    <h4 class="section-title">@Model.Podcast.PodcastTitle</h4>
                </div>

                <div class="row">
                    <div class="col-lg-3 col-12">
                        <div class="custom-block-icon-wrap">
                            <div class="custom-block-image-wrap custom-block-image-detail-page">
                                <img src="~/images/podcast/@Model.Podcast.PodcastCoverImg" class="custom-block-image img-fluid" alt="">
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-9 col-12">
                        <div class="custom-block-info">
                            <h2 class="mb-2">@Model.Podcast.PodcastTitle</h2>
                            <h4>@Model.Podcast.Category!.CategoryName</h4>
                            <p>@Model.Podcast.PodcastDescription</p>

                            <div class="d-flex align-items-center mb-3">
                                <div class="d-flex flex-column mb-3">
                                       <h4 class="me-3">@Model.Episodes!.Count() Episode(s)</h4>
                                       <h4 id="subscriptionCount" class="me-3 text-success">@Model.Podcast.Subscriptions!.Count() Subscribers</h4>
                                </div>


                                @if (_signInManager.IsSignedIn(User))
                                {
                                    <button id="subscribeBtn" class="btn btn-primary me-3" onclick="toggleSubscription('@Model.Podcast.PodcastId', @(isSubscribed ? "false" : "true"))">
                                        @(isSubscribed ? "Unsubscribe" : "Subscribe")
                                    </button>
                                }
                                else
                                {
                                    <a asp-action="Login" asp-controller="Account" class="btn btn-secondary">
                                        Login to access podcasts and episodes!
                                    </a>
                                }
                            </div>

                            <div class="rating-section mb-3">
                                @if (_signInManager.IsSignedIn(User))
                                {
                                    <div class="rating" data-user-rating="@Model.UserRatingValue" data-podcast-id="@Model.Podcast.PodcastId">
                                        <span class="star" data-value="1">★</span>
                                        <span class="star" data-value="2">★</span>
                                        <span class="star" data-value="3">★</span>
                                        <span class="star" data-value="4">★</span>
                                        <span class="star" data-value="5">★</span>
                                    </div>
                                    <button class="btn btn-primary mt-2" id="submitRating">Submit Rating</button>
                                }
                                <h4>Average Rating: <span id="averageRating">@averageRating</span></h4>
                                <h4>Total Ratings: <span>@ratingCount</span></h4>
                            </div>

                            <div class="modal fade" id="playlistModal-@Model.Podcast.PodcastId" aria-labelledby="playlistModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="playlistModalLabel">Add to Playlist</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <p>Select playlists to add <strong>@Model.Podcast.PodcastTitle</strong>:</p>
                                            <form id="playlistForm-@Model.Podcast.PodcastId" method="post" asp-action="AddToPlaylists" asp-controller="Playlists">
                                                <input type="hidden" name="podcastId" value="@Model.Podcast.PodcastId" />
                                                @foreach (var playlist in ViewBag.UserPlaylists)
                                                {
                                                    <div class="form-check playlist-item">
                                                        <input class="form-check-input" type="checkbox" id="playlist-@playlist.PlaylistId" name="playlistIds" value="@playlist.PlaylistId">
                                                        <label class="form-check-label" for="playlist-@playlist.PlaylistId">
                                                            @playlist.PlaylistName
                                                        </label>
                                                    </div>
                                                }
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                    <button type="button" class="btn btn-primary" onclick="submitPlaylists('@Model.Podcast.PodcastId')">Add to Playlist</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            

                            <div class="profile-block profile-detail-block d-flex flex-wrap align-items-center mt-5">
                                <div class="d-flex mb-3 mb-lg-0 mb-md-0">
                                    <img src="~/images/profile/@(Model.Podcast.Creator?.ProfileImg ?? "userImg.png")" class="profile-block-image img-fluid" alt="">
                                    <p class="ms-3">
                                        <a asp-action="CreatorDetails"
                                        asp-controller="Account"
                                        asp-route-id="@Model.Podcast.CreatorId">@Model.Podcast.Creator!.UserName</a>

                                        <img src="~/images/verified.png" class="verified-image img-fluid" alt="">
                                        <strong>@Model.Podcast.Creator.CreatorGenre</strong>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



<section class="latest-podcast-section section-padding pb-0" id="section_2">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-12 col-12">
                <div class="section-title-wrap mb-5 text-center">
                    <h4 class="section-title">@Model.Podcast.PodcastTitle episodes</h4>
                </div>
            </div>
            @if (Model.Episodes != null && Model.Episodes.Any())
            {
                @foreach (var episode in Model.Episodes)
                {
                    <div class="col-lg-6 col-md-6 col-sm-12 mb-4">
                        <div class="custom-block d-flex p-3" style="border: 1px solid #ddd; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
                            <div class="me-3">
                                <div class="custom-block-icon-wrap">
                                    <a href="detail-page.html" class="custom-block-image-wrap">
                                        <img src="~/images/episodes/@episode.EpisodeCoverImg" class="custom-block-image img-fluid rounded" alt="">
                                    </a>
                                </div>

                                <div class="mt-2">
                                    <a asp-action="EpisodeDetails" asp-controller="Episodes"
                                       asp-route-id="@episode.EpisodeId" class="btn custom-btn btn-sm w-100">Play</a>
                                </div>
                            </div>

                            <div class="custom-block-info flex-grow-1">
                                <div class="custom-block-top d-flex justify-content-between mb-2">
                                    <small>
                                        <i class="bi-clock-fill custom-icon"></i> @episode.EpisodeDuration
                                    </small>

                                    <small class="badge bg-primary">Episode @episode.EpisodeNumber</small>
                                </div>

                                <h5 class="mb-2">
                                    <a asp-action="EpisodeDetails" asp-controller="Episodes"
                                       asp-route-id="@episode.EpisodeId">
                                        @episode.EpisodeTitle
                                    </a>
                                </h5>

                                <p class="mb-0 text-muted">@episode.EpisodeDescription</p>

                                <div class="custom-block-bottom d-flex justify-content-between align-items-center mt-3">
                                    <a href="#" class="bi-headphones me-1 text-muted">
                                        <span>@episode.EpisodeListeners!.Count()</span>
                                    </a>

                                    <a href="#" class="bi-heart me-1 text-muted">
                                        <span>@episode.EpisodeLikes!.Count()</span>
                                    </a>

                                    <a href="#" class="bi-chat me-1 text-muted">
                                        <span>@episode.Comments!.Count()</span>
                                    </a>

                                  
                                </div>
                            </div>

                        </div>
                    </div>
                }
            }
            else
            {
                <h4>No Episodes Are Added Yet</h4>
            }

        </div>
    </div>
</section>





<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    function toggleSubscription(podcastId, isSubscribing) {
        $.ajax({
            url: '/Subscriptions/ToggleSubscription',
            type: 'POST',
            data: {
                podcastId: podcastId,
                isSubscribing: isSubscribing
            },
            success: function (response) {

                if (response.subscriptionCount !== undefined) {
                    $('#subscriptionCount').text(response.subscriptionCount + ' Subscriptions');


                    if (isSubscribing) {
                        $('#subscribeBtn').text('Unsubscribe').removeClass('btn-primary').addClass('btn-secondary')
                            .attr('onclick', "toggleSubscription('" + podcastId + "', false)");
                    } else {
                        $('#subscribeBtn').text('Subscribe').removeClass('btn-secondary').addClass('btn-primary')
                            .attr('onclick', "toggleSubscription('" + podcastId + "', true)");
                    }
                }
                else {
                    alert("Error: Subscription count is undefined.");
                }

            },
            error: function (xhr, status, error) {
                alert('Error processing your request. Please try again later.');

            }
        });
    }



    $(document).ready(function () {
        let selectedRating = 0;
        const stars = $(".star");
        const podcastId = $(".rating").data("podcast-id");
        const token = $('input[name="__RequestVerificationToken"]').val();


        const savedRating = $(".rating").data("user-rating");


        if (savedRating) {
            stars.each(function () {
                if ($(this).data("value") <= savedRating) {
                    $(this).addClass("selected");
                    $('#submitRating').text('Re-Submit').removeClass('btn-primary').addClass('btn-secondary')
                }
            });
            selectedRating = savedRating;
        }

        stars.on("click", function () {
            selectedRating = $(this).data("value");

            stars.removeClass("selected").each(function () {
                if ($(this).data("value") <= selectedRating) {
                    $(this).addClass("selected");


                }
            });
        });


        $("#submitRating").on("click", function () {
            if (selectedRating > 0) {
                $.ajax({
                    type: "POST",
                    url: "/Ratings/SubmitRating",
                    data: {
                        __RequestVerificationToken: token,
                        PodcastId: podcastId,
                        RatingValue: selectedRating
                    },

                    success: function (response) {
                        if (response.success) {
                            $("#averageRating").text(response.averageRating);
                            $('#submitRating').text('Re-Submit').removeClass('btn-primary').addClass('btn-secondary')


                        } else {
                            alert("There was an issue submitting your rating.");
                        }
                    },
                    error: function () {
                        alert("An error occurred.");
                    }
                });
            } else {
                alert("Please select a rating.");
            }
        });
    });



    function submitPlaylists(podcastId) {
        var form = document.getElementById('playlistForm-' + podcastId);


        var checkboxes = form.querySelectorAll('input[name="playlistIds"]:checked');
        if (checkboxes.length === 0) {
            alert("No playlist(s) was selected");
            return;
        }

        var formData = new FormData(form);


        fetch('/Playlists/AddToPlaylists', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Podcast added to playlist(s) successfully!');

                    $('#playlistModal-' + podcastId).modal('hide');

                }
                else {
                    alert("Already Exists In Selected Playlist(s)")
                }
            })
            .catch(error => console.error('Error:', error));
    }


</script>


