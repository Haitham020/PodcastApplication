@model IEnumerable<Episode>

@using PodcastApplication.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject AppDbContext _db


@{
    ViewData["Title"] = "Episodes";
}


<section class="latest-podcast-section section-padding pb-0" id="section_2">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-12 col-12">
                <div class="section-title-wrap mb-5">
                    <h4 class="section-title">Lastest episodes</h4>
                </div>
            </div>
            @foreach (var episode in Model)
            {
                var userId = _userManager.GetUserId(User);
                var isLiked = _db.EpisodeLikes.FirstOrDefault(x => x.UserId == userId && x.EpisodeId == episode.EpisodeId);

                var favoriteExist = _db.Favorites.FirstOrDefault(x => x.UserId == userId && x.EpisodeId == episode.EpisodeId);

                <div class="col-lg-6 col-12 mb-4 mb-lg-0">
                    <div class="custom-block d-flex">
                        <div class="">
                            <div class="custom-block-icon-wrap">
                                <div class="section-overlay"></div>
                                <a class="custom-block-image-wrap">
                                    <img src="~/images/episodes/@episode.EpisodeCoverImg" class="custom-block-image img-fluid" alt="">

                                    
                                </a>
                            </div>
                        </div>

                        <div class="custom-block-info">
                            <div class="custom-block-top d-flex mb-1">
                                <small class="me-4">
                                    <i class="bi-clock-fill custom-icon"></i>
                                    @episode.EpisodeDuration
                                </small>

                                <small class="badge"> episode @episode.EpisodeNumber of<span>  @episode.Podcast!.Episodes!.Count()</span></small>
                            </div>

                            <h5 class="mb-2">
                                <a asp-action="EpisodeDetails" asp-controller="Episodes"
                                   asp-route-id="@episode.EpisodeId">
                                    @episode.EpisodeTitle  | @episode.Podcast.PodcastTitle
                                </a>
                            </h5>

                            <div class="profile-block d-flex">
                                <img src="~/images/profile/woman-posing-black-dress-medium-shot.jpg" class="profile-block-image img-fluid" alt="">

                                <p>
                                    @episode.Podcast.Creator!.UserName
                                    <img src="~/images/verified.png" class="verified-image img-fluid" alt="">
                                    <strong>@episode.Podcast!.Creator!.CreatorGenre</strong>
                                </p>
                            </div>

                            <p class="mb-0">@episode.EpisodeDescription</p>

                            <div class="custom-block-bottom d-flex justify-content-between mt-3">
                                <a href="#" class="bi-headphones me-1">
                                    <span>@episode.EpisodeListeners!.Count()</span>
                                </a>

                                <a href="#" class="bi-heart me-1">
                                    <span>@episode.EpisodeLikes!.Count()</span>
                                </a>

                                <a href="#" class="bi-chat me-1">
                                    <span>@episode.Comments!.Count()</span>
                                </a>

                                <a href="#" class="bi-download">
                                    <span>0</span>
                                </a>
                            </div>
                        </div>

                        <div class="d-flex flex-column ms-auto">
                            @if (isLiked != null)
                            {
                                <a id="likeBtn-@episode.EpisodeId" class="badge ms-auto" onclick="toggleLike('@episode.EpisodeId', false)">
                                    <i class="bi-heart-fill"></i>
                                </a>
                            }
                            else
                            {
                                <a id="likeBtn-@episode.EpisodeId" class="badge ms-auto" onclick="toggleLike('@episode.EpisodeId', true)">
                                    <i class="bi-heart"></i>
                                </a>
                            }
                            @if (favoriteExist != null)
                            {
                                <a id="favBtn-@episode.EpisodeId" class="badge ms-auto" onclick="toggleFavorite('@episode.EpisodeId', false)">
                                    <i class="bi-bookmark-fill"></i>
                                </a>
                            }
                            else
                            {
                                <a id="favBtn-@episode.EpisodeId" class="badge ms-auto" onclick="toggleFavorite('@episode.EpisodeId', true)">
                                    <i class="bi-bookmark"></i>
                                </a>
                            }

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<script>

    //Toggle Likes
    function toggleLike(episodeId, isLiking) {
        $.ajax({
            url: '/EpisodeLikes/ToggleLike',
            type: 'POST',
            data: {
                episodeId: episodeId,
                isLiking: isLiking
            },
            success: function (response) {
                if (response.likeCount !== undefined) {

                    $(`#like-span-${episodeId}`).text(response.likeCount);

                    if (isLiking) {

                        $(`#likeBtn-${episodeId}`).attr('onclick', `toggleLike('${episodeId}', false)`)
                            .find('i').removeClass('bi-heart').addClass('bi-heart-fill');
                    }
                    else {
                        $(`#likeBtn-${episodeId}`).attr('onclick', `toggleLike('${episodeId}', true)`)
                            .find('i').removeClass('bi-heart-fill').addClass('bi-heart');
                    }
                }
                else {
                    alert("Error liking");
                }
            },
            error: function (xhr, status, error) {
                alert('Please login to interact.');
            }
        });
    }

    //Toggle Favorites

    function toggleFavorite(episodeId, addingFavorite) {
        $.ajax({
            url: '/Favorites/ToggleFavorite',
            type: 'POST',
            data: {
                episodeId: episodeId,
                addingFavorite: addingFavorite
            },
            success: function (response) {
                if (addingFavorite) {
                    $(`#favBtn-${episodeId}`).attr('onclick', `toggleFavorite('${episodeId}', false)`)
                        .find('i').removeClass('bi-bookmark').addClass('bi-bookmark-fill');
                }
                else {
                    $(`#favBtn-${episodeId}`).attr('onclick', `toggleFavorite('${episodeId}', true)`)
                        .find('i').removeClass('bi-bookmark-fill').addClass('bi-bookmark');
                }
            },
            error: function (xhr, status, error) {
                alert('Please login to interact.');
            }
        });
    }

</script>