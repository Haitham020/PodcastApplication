@model EpisodeDetailViewModel
@using PodcastApplication.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject AppDbContext _db

@{
    var userId = _userManager.GetUserId(User);
    var isLiked = _db.EpisodeLikes.FirstOrDefault(x => x.UserId == userId && x.EpisodeId == Model.Episode!.EpisodeId);
    var favoriteExist = _db.Favorites.FirstOrDefault(x => x.UserId == userId && x.EpisodeId == Model.Episode!.EpisodeId);

}

<style>
    /* General Section Styling */
    .latest-podcast-section,
    .related-podcast-section {
        background-color: #ffffff;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .section-title {
        font-size: 2rem;
        font-weight: 600;
        margin-bottom: 20px;
        color: #333;
    }

    .custom-block-image-wrap img {
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
    }

    .custom-block-info h2,
    .custom-block-info h5 {
        font-weight: 500;
        color: #222;
    }

    .custom-block-info p {
        font-size: 1rem;
        line-height: 1.5;
        color: #555;
    }

    .audio-player {
        background-color: #f8f9fa;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 15px;
        margin-top: 15px;
    }

    .audio-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
    }

    .btn {
        font-size: 0.9rem;
        border-radius: 5px;
        padding: 8px 12px;
    }

    .profile-detail-block {
        background-color: #f0f8ff;
        border-radius: 10px;
        padding: 15px;
        margin-top: 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .social-icon-link {
        color: #555;
        font-size: 1.2rem;
        margin-right: 10px;
        transition: color 0.3s ease-in-out;
    }

        .social-icon-link:hover {
            color: #007bff;
        }

    .related-podcast-section .custom-block {
        background-color: #ffffff;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s;
    }

        .related-podcast-section .custom-block:hover {
            transform: scale(1.05);
        }
</style>


@{

    ViewData["Title"] = "Episode Details";
}





<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">



<section class="latest-podcast-section section-padding pb-0" id="section_2">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10 col-12">
                <div class="section-title-wrap mb-5">
                    <h4 class="section-title">@Model.Episode!.EpisodeTitle</h4>
                    <small class="completed-status" style="display: inline-block; margin-top: 5px; padding: 2px 5px; border-radius: 3px; background-color: @(Model.Episode.UserEpisodeProgress?.IsCompleted == true ? "#28a745" : "#dc3545"); color: white;">
                        @(Model.Episode.UserEpisodeProgress?.IsCompleted == true ? "Completed" : "Not Completed")
                    </small>

                </div>
                <div class="row">
                    <div class="col-lg-3 col-12">
                        <div class="custom-block-icon-wrap">
                            <div class="custom-block-image-wrap custom-block-image-detail-page">
                                <img src="~/images/episodes/@Model.Episode.EpisodeCoverImg" class="custom-block-image img-fluid" alt="">
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-9 col-12">
                        <div class="custom-block-info">

                            <div class="custom-block-top d-flex mb-1">
                                <small class="me-4">
                                    <button id="playPauseBtn" class="btn btn-primary"><i class="bi-play"></i> Play now</button>
                                </small>
                                <small>
                                    <i class="bi-clock-fill custom-icon"></i> @Model.Episode.EpisodeDuration
                                </small>
                                <small class="ms-auto">
                                    Episode <span class="badge">
                                        @Model.EpisodeNumber
                                    </span>
                                </small>
                                <small class="ms-auto">Likes <span id="like-count" class="badge">@(Model.Episode.EpisodeLikes?.Count() ?? 0)</span></small>
                            </div>

                            <h2 class="mb-2">@Model.Episode.EpisodeTitle</h2>
                            <a asp-action="PodcastDetails" asp-controller="Podcasts" asp-route-id="@Model.Episode.PodcastId" class="mb-2">@Model.Episode.Podcast!.PodcastTitle</a>

                            <p>@Model.Episode.EpisodeDescription</p>

                            <!-- Audio Player Section -->
                            @if (_signInManager.IsSignedIn(User))
                            {
                                <div class="audio-player">
                                    <audio id="audioPlayer" src="~/audio/@Model.Episode.AudioFile" preload="metadata" controls></audio>
                                    <div class="audio-controls">
                                        <button class="btn" id="rewindBtn">⏪ 15s</button>
                                        <button class="btn" id="forwardBtn">⏩ 15s</button>
                                        <span id="currentTime">00:00</span> / <span id="totalTime">00:00</span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div>
                                    <h4 class="text-warning">Please login to access the episode</h4>
                                </div>
                            }

                            <div class="d-flex flex-column ms-auto">
                                @if (isLiked != null)
                                {
                                    <a id="likeBtn-@Model.Episode.EpisodeId" class="badge ms-auto" onclick="toggleLike('@Model.Episode.EpisodeId', false)">
                                        <i class="bi-heart-fill fs-3"></i>
                                    </a>
                                }
                                else
                                {
                                    <a id="likeBtn-@Model.Episode.EpisodeId" class="badge ms-auto" onclick="toggleLike('@Model.Episode.EpisodeId', true)">
                                        <i class="bi-heart fs-3"></i>
                                    </a>
                                }
                                @if (favoriteExist != null)
                                {
                                    <a id="favBtn-@Model.Episode.EpisodeId" class="badge ms-auto" onclick="toggleFavorite('@Model.Episode.EpisodeId', false)">
                                        <i class="bi-bookmark-fill fs-3"></i>
                                    </a>
                                }
                                else
                                {
                                    <a id="favBtn-@Model.Episode.EpisodeId" class="badge ms-auto" onclick="toggleFavorite('@Model.Episode.EpisodeId', true)">
                                        <i class="bi-bookmark fs-3"></i>
                                    </a>
                                }

                            </div>

                            <div class="profile-block profile-detail-block d-flex flex-wrap align-items-center mt-5">
                                <div class="d-flex mb-3 mb-lg-0 mb-md-0">
                                    <img src="@(Model.Episode.Podcast.Creator?.ProfileImg != null ? Url.Content($"~/images/profile/{Model.Episode.Podcast.Creator.ProfileImg}") : Url.Content("~/images/profile/userImg.png"))" class="profile-block-image img-fluid" alt="">
                                    <p>
                                        <a asp-action="CreatorDetails"
                                           asp-controller="Account"
                                           asp-route-id="@Model.Episode.Podcast.CreatorId">@Model.Episode.Podcast!.Creator!.UserName</a>
                                        <img src="~/images/verified.png" class="verified-image img-fluid" alt="">
                                        <strong>@Model.Episode.Podcast.Creator?.CreatorGenre</strong>
                                    </p>
                                </div>
                                <ul class="social-icon ms-lg-auto ms-md-auto">
                                    <li class="social-icon-item">
                                        <a href="#" class="social-icon-link bi-instagram"></a>
                                    </li>
                                    <li class="social-icon-item">
                                        <a href="#" class="social-icon-link bi-twitter"></a>
                                    </li>
                                    <li class="social-icon-item">
                                        <a href="#" class="social-icon-link bi-whatsapp"></a>
                                    </li>
                                </ul>
                            </div>

                            <!-- Transcript Section -->
                            <div class="transcript-section mt-5">
                                <h4 class="transcript-title">Transcript</h4>
                                @if (!string.IsNullOrEmpty(Model.Episode.Transcript))
                                {
                                    <div class="transcript-content">
                                        <p>@Model.Episode.Transcript</p>
                                    </div>
                                }
                                else
                                {
                                    <p class="text-muted">No transcript available for this episode.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="center">
        @if (_signInManager.IsSignedIn(User))
        {
            <a asp-action="AllComments" asp-controller="Comments"
               asp-route-id="@Model.Episode.EpisodeId"><strong>View Comments</strong></a>
        }
        else
        {
            <h4>Please sign in to view available comments!</h4>
        }
    </div>
</section>


<section class="related-podcast-section section-padding">
    <div class="container">
        <div class="row">

            <div class="col-lg-12 col-12">
                <div class="section-title-wrap mb-5">
                    <h4 class="section-title">Related episodes</h4>
                </div>
            </div>
            @if (Model.RelatedEpisodes != null && Model.RelatedEpisodes.Any())
            {
                @foreach (var episode in Model.RelatedEpisodes)
                {
                    <div class="col-lg-4 col-12 mb-4 mb-lg-0">
                        <div class="custom-block custom-block-full">
                            <div class="custom-block-image-wrap">
                                <a asp-action="EpisodeDetails"
                                   asp-controller="Episodes" asp-route-id="@episode.EpisodeId">
                                    <img src="~/images/episodes/@episode.EpisodeCoverImg" class="custom-block-image img-fluid" alt="">
                                </a>
                            </div>

                            <div class="custom-block-info">
                                <h5 class="mb-2">
                                    <a asp-action="EpisodeDetails"
                                       asp-controller="Episodes" asp-route-id="@episode.EpisodeId">
                                        @episode.EpisodeTitle
                                        <br />
                                        @episode.Podcast!.PodcastTitle
                                    </a>
                                </h5>

                                <div class="profile-block d-flex">
                                    <img src="~/images/profile/@(episode.Podcast.Creator?.ProfileImg ?? "userImg.png")" class="profile-block-image img-fluid" alt="">

                                    <p>
                                        @episode.Podcast!.Creator!.UserName
                                        <strong>@episode.Podcast.Creator.CreatorGenre</strong>
                                    </p>
                                </div>


                                <div class="custom-block-bottom d-flex justify-content-between mt-3">
                                    <a href="#" class="bi-headphones me-1">
                                        <span>@(episode.EpisodeListeners?.Count() ?? 0)</span>
                                    </a>

                                    <a href="#" class="bi-heart me-1">
                                        <span>@(episode.EpisodeLikes?.Count() ?? 0)</span>
                                    </a>

                                    <a href="#" class="bi-chat me-1">
                                        <span>@(episode.Comments?.Count() ?? 0)</span>
                                    </a>
                                </div>
                            </div>


                        </div>
                    </div>
                }
            }
            else
            {
                <h4>There is no related episodes at this time</h4>
            }



        </div>
    </div>
</section>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>

    //Listeners
    let audioPlayer = document.getElementById('audioPlayer');
    let episodeId = '@Model.Episode.EpisodeId';
    let isFirstPlay = true;

    audioPlayer.addEventListener('play', () => {
        if (isFirstPlay) {
            $.ajax({
                url: '/Episodes/AddEpisodeListener',
                type: 'POST',
                data: { episodeId: episodeId },
                success: function () {
                    console.log("Listener added for episode:", episodeId);
                    isFirstPlay = false;
                },
                error: function (xhr, status, error) {
                    console.error("Error adding listener:", error);
                }
            });
        }
    });


    //Progress
    let lastProgressSavedTime = 0;
    audioPlayer.addEventListener('timeupdate', () => {
        let progress = audioPlayer.currentTime;
        let episodeId = '@Model.Episode.EpisodeId';
        let currentTime = Date.now();

        if (currentTime - lastProgressSavedTime >= 7000) {
            lastProgressSavedTime = currentTime;

            $.ajax(
                {
                    url: '/Episodes/SaveProgress',
                    type: 'POST',
                    data: {
                        episodeId: episodeId,
                        progress: progress
                    },
                    success: function () {
                        console.log("Progress saved");
                    }
                }

            )
        }

    })

    $(document).ready(function () {
        let episodeId = '@Model.Episode.EpisodeId';

        $.ajax({
            url: '/Episodes/GetProgress',
            type: 'GET',
            data: { episodeId: episodeId },
            success: function (progress) {
                if (progress) {
                    console.log('Fetched progress:', progress);
                    if (progress && isFinite(progress)) {
                        audioPlayer.currentTime = progress;
                    } else {
                        console.warn('Invalid progress value:', progress);
                    }
                }
            }
        });
    });



    // audio player
    $(document).ready(function () {
        const audioPlayer = document.getElementById('audioPlayer');
        const playPauseBtn = document.getElementById('playPauseBtn');
        const rewindBtn = document.getElementById('rewindBtn');
        const forwardBtn = document.getElementById('forwardBtn');
        const currentTimeDisplay = document.getElementById('currentTime');
        const totalTimeDisplay = document.getElementById('totalTime');

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }

        audioPlayer.addEventListener('loadedmetadata', function () {
            totalTimeDisplay.textContent = formatTime(audioPlayer.duration);
        });

        audioPlayer.addEventListener('timeupdate', function () {
            currentTimeDisplay.textContent = formatTime(audioPlayer.currentTime);
        });

        playPauseBtn.addEventListener('click', function () {
            if (audioPlayer.paused) {
                audioPlayer.play();
                playPauseBtn.textContent = '⏸ Pause';
            } else {
                audioPlayer.pause();
                playPauseBtn.textContent = '▶️ Play';
            }
        });

        // Rewind 15 seconds
        rewindBtn.addEventListener('click', function () {
            audioPlayer.currentTime = Math.max(0, audioPlayer.currentTime - 15);
        });

        // Fast forward 15 seconds
        forwardBtn.addEventListener('click', function () {
            audioPlayer.currentTime = Math.min(audioPlayer.duration, audioPlayer.currentTime + 15);
        });
    });




    //Toggle Likes:

    function toggleLike(episodeId, isLiking) {
        $.ajax({
            url: '/EpisodeLikes/ToggleLike',
            type: 'POST',
            data: {
                episodeId: episodeId,
                isLiking: isLiking
            },
            success: function (response) {
                if (response.likeCount !== undefined) {

                    $(`#like-span-${episodeId}`).text(response.likeCount);

                    if (isLiking) {

                        $(`#likeBtn-${episodeId}`).attr('onclick', `toggleLike('${episodeId}', false)`)
                            .find('i').removeClass('bi-heart').addClass('bi-heart-fill');
                    }
                    else {
                        $(`#likeBtn-${episodeId}`).attr('onclick', `toggleLike('${episodeId}', true)`)
                            .find('i').removeClass('bi-heart-fill').addClass('bi-heart');
                    }
                }
                else {
                    alert("Error liking");
                }
            },
            error: function (xhr, status, error) {
                alert('Please login to interact.');
            }
        });
    }

    //Toggle Favorites

    function toggleFavorite(episodeId, addingFavorite) {
        $.ajax({
            url: '/Favorites/ToggleFavorite',
            type: 'POST',
            data: {
                episodeId: episodeId,
                addingFavorite: addingFavorite
            },
            success: function (response) {
                if (addingFavorite) {
                    $(`#favBtn-${episodeId}`).attr('onclick', `toggleFavorite('${episodeId}', false)`)
                        .find('i').removeClass('bi-bookmark').addClass('bi-bookmark-fill');
                }
                else {
                    $(`#favBtn-${episodeId}`).attr('onclick', `toggleFavorite('${episodeId}', true)`)
                        .find('i').removeClass('bi-bookmark-fill').addClass('bi-bookmark');
                }
            },
            error: function (xhr, status, error) {
                alert('Please login to interact.');
            }
        });
    }



</script>

