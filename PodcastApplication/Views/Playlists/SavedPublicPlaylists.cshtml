@model IEnumerable<Playlist>

@using PodcastApplication.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@inject AppDbContext _db

@{
    ViewData["Title"] = "Your Saved Playlists";
}

<section class="public-playlists-section py-5">
    <div class="container">
        <div class="section-title-wrap mb-5 text-center">
            <h2 class="section-title">Saved Playlists</h2>
            <p class="section-description">Explore the top public playlists curated by users. Click on a playlist to view its saved items.</p>
        </div>

        @if (Model.Any() && Model != null)
        {
            <div class="row">
                @foreach (var playlist in Model)
                {
                    var userId = _userManager.GetUserId(User);

                    var savePlaylistExists = _db.SavedPlaylists.FirstOrDefault(x => x.PlaylistId == playlist.PlaylistId && x.UserId == userId);

                    <div class="col-lg-4 col-md-6 col-12 mb-4" id="episode-block-@playlist.PlaylistId">
                        <div class="playlist-card shadow-lg rounded-lg position-relative overflow-hidden">
                            <div class="playlist-icon position-absolute top-0 start-0 m-3">
                                <i class="bi bi-music-note-list"></i> <!-- Add the playlist icon here -->
                            </div>

                            <div class="playlist-content p-4 text-center">
                                <h3 class="playlist-name mb-3 text-truncate">@playlist.PlaylistName</h3>
                                <p class="playlist-creator text-muted mb-3">by @playlist.User!.UserName</p>

                                <a asp-action="SavedItemsInPlaylist" asp-controller="Playlists"
                                   asp-route-playlistId="@playlist.PlaylistId"
                                   class="btn btn-primary btn-sm mt-3 w-100">
                                    Go to Playlist
                                </a>

                                <!-- Save/Remove playlist button -->
                                <a id="favBtn-@playlist.PlaylistId" class="badge ms-auto position-absolute top-0 end-0 mt-3 me-3"
                                   onclick="toggleSavePLaylist('@playlist.PlaylistId', false)">
                                    <i class="bi-bookmark-fill"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="no-playlists text-center py-5">
                <h4 class="text-muted">No Saved Playlists Yet</h4>
            </div>
        }
    </div>
</section>

<style>
    /* General styles for the playlist section */
    .public-playlists-section {
        background-color: #f9f9f9;
    }

    .section-title-wrap {
        margin-bottom: 40px;
    }

    .section-title {
        font-size: 2.5rem;
        font-weight: 600;
        color: #333;
    }

    .section-description {
        font-size: 1.1rem;
        color: #777;
    }

    .playlist-card {
        background-color: #ffffff;
        border-radius: 15px;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        position: relative;
    }

        /* Hover effect on playlist cards */
        .playlist-card:hover {
            transform: translateY(-5px);
            box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.1);
        }

    .playlist-content {
        padding: 20px;
    }

    .playlist-name {
        font-size: 1.5rem;
        font-weight: 600;
        color: #333;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .playlist-creator {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        transition: background-color 0.2s ease-in-out;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

    .playlist-icon i {
        font-size: 1.5rem;
        color: #007bff;
    }

    .no-playlists {
        color: #6c757d;
    }

    /* Icon style */
    .bi {
        font-size: 1.8rem;
    }

    .badge {
        background-color: #fff;
        color: #007bff;
        font-size: 1.2rem;
        cursor: pointer;
    }

        .badge:hover {
            color: #0056b3;
        }

    /* Custom spacing for buttons */
    .playlist-card .badge {
        top: 15px;
        right: 15px;
    }

</style>

<script>
    function toggleSavePLaylist(playlistId, isSaving) {
        $.ajax({
            url: '/SavePlaylists/ToggleSavePLaylist',
            type: 'POST',
            data: {
                playlistId: playlistId,
                isSaving: isSaving
            },
            success: function (response) {
                if (!isSaving) {
                    $(`#episode-block-${playlistId}`).remove();
                }

            },
            error: function (xhr, status, error) {
                alert('Please login to interact.');
            }
        });
    }
</script>
